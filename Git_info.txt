Команды для работы с git:
git --version				//Проверить версию

git config -- global user.name Имя	//Записать имя, кто использует git
git config -- global user.name почта	//Записать почту, кто использует git

git init				//Инициализировать git в папке

git add					//Добавить файлы на обновление
git add UIR/**/*.html			//Выбор всех дочерних папок - папки UIR и добавление всех html файлов
git add !UIR/file.html			//Добавление всех файлов из папки кроме файла file.html	

git rm --cached файл			//Удаление файла/директории из ожидания
rm -r .git				//Удаление .git из папки

git log					//Вывод информации о коммитах
git log --oneline

Создаю файл .gitignore в файле перечисляю, что нужно игнорировать при добавлении. Например:
file.html				//Игнорирование одного файла
UIR/					//Игнорирование всей папки
UIR/*.html				//Игнорирование всех файлов с расширением .html в папке UIR

git checkout b3c4dd4			//Просмотр изменений старого коммита. Необходимо вводить код старого коммита
git checkout master			//Возвращение на ветку мастера
git revert b3c4dd4			//Отмена коммита, но не удаление
git reset b3c4dd4			//Удаление всех коммитов после коммита - b3c4dd4, но файлы не изменяются
git reset b3c4dd4 --hard		//Удаление всех коммитов после коммита - b3c4dd4, и возвращение старых файлов
wq					//Выйти из режима удаления

git branch имя_ветки			//Создать ветку с именем
git branch -a				//Посмотреть все ветки
git checkout имя_ветки			//Перейти к ветке
git checkout -b имя_ветки		//Создание новой ветки и переход на неё

git remote add origin git@github.com:MacDouglas/labs_from_university.git
git push -u origin master 		//Отправка в файлов GitHub